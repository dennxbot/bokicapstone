{"version":3,"file":"page-D0Z_3AFw.js","sources":["../../src/pages/order-details/page.tsx"],"sourcesContent":["\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { useOrders } from '../../hooks/useOrders';\r\nimport { formatPesoSimple } from '../../lib/currency';\r\nimport { supabase } from '../../lib/supabase';\r\n\r\nconst OrderDetails = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const { getOrderById } = useOrders();\r\n  const [order, setOrder] = useState<any | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    const loadOrder = async () => {\r\n      if (!id) return;\r\n      \r\n      try {\r\n        setLoading(true);\r\n        const orderData = await getOrderById(id);\r\n        setOrder(orderData);\r\n      } catch (error) {\r\n        console.error('Error loading order:', error);\r\n        setOrder(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadOrder();\r\n\r\n    // Subscribe to real-time updates for this specific order\r\n    const subscription = supabase\r\n      .channel(`order-${id}`)\r\n      .on('postgres_changes', \r\n        { \r\n          event: 'UPDATE', \r\n          schema: 'public', \r\n          table: 'orders',\r\n          filter: `id=eq.${id}`\r\n        },\r\n        async () => {\r\n          // Reload order data when status changes\r\n          if (id) {\r\n            const updatedOrder = await getOrderById(id);\r\n            setOrder(updatedOrder);\r\n          }\r\n        }\r\n      )\r\n      .on('postgres_changes', \r\n        { \r\n          event: '*', \r\n          schema: 'public', \r\n          table: 'order_status_history',\r\n          filter: `order_id=eq.${id}`\r\n        },\r\n        async () => {\r\n          // Reload order data when status history changes\r\n          if (id) {\r\n            const updatedOrder = await getOrderById(id);\r\n            setOrder(updatedOrder);\r\n          }\r\n        }\r\n      )\r\n      .subscribe();\r\n\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, [id, user, navigate, getOrderById]);\r\n\r\n  const getStatusSteps = () => {\r\n    const steps = [\r\n      { key: 'pending', label: 'Order Placed', icon: 'ri-check-line' },\r\n      { key: 'preparing', label: 'Preparing', icon: 'ri-restaurant-line' },\r\n      { key: 'ready', label: order?.order_type === 'delivery' ? 'Ready for Delivery' : 'Ready for Pickup', icon: order?.order_type === 'delivery' ? 'ri-truck-line' : 'ri-store-line' },\r\n      { key: 'out_for_delivery', label: order?.order_type === 'delivery' ? 'Out for Delivery' : 'Ready for Pickup', icon: order?.order_type === 'delivery' ? 'ri-truck-line' : 'ri-store-line' },\r\n      { key: 'completed', label: 'Completed', icon: 'ri-check-double-line' }\r\n    ];\r\n\r\n    const statusOrder = ['pending', 'preparing', 'ready', 'out_for_delivery', 'completed'];\r\n    const currentIndex = statusOrder.indexOf(order?.status || 'pending');\r\n\r\n    return steps.map((step, index) => ({\r\n      ...step,\r\n      completed: index <= currentIndex,\r\n      active: index === currentIndex\r\n    }));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-4 border-orange-500 border-t-transparent mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return null;\r\n  }\r\n\r\n  if (!order) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Order not found</h2>\r\n          <button \r\n            onClick={() => navigate('/orders')}\r\n            className=\"text-orange-600 hover:text-orange-700\"\r\n          >\r\n            Back to Orders\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const statusSteps = getStatusSteps();\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 pb-20\">\r\n      <div className=\"bg-white shadow-sm\">\r\n        <div className=\"max-w-md mx-auto px-4 py-4\">\r\n          <div className=\"flex items-center\">\r\n            <button onClick={() => navigate('/orders')} className=\"mr-4\">\r\n              <i className=\"ri-arrow-left-line text-xl\"></i>\r\n            </button>\r\n            <h1 className=\"text-xl font-bold\">Order Details</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-md mx-auto px-4 py-6\">\r\n        {/* Order Info */}\r\n        <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n          <div className=\"flex justify-between items-start mb-4\">\r\n            <div>\r\n              <h2 className=\"text-lg font-semibold\">Order #{order.id.slice(-4)}</h2>\r\n              <p className=\"text-sm text-gray-600\">\r\n                {new Date(order.created_at).toLocaleDateString()} at {new Date(order.created_at).toLocaleTimeString()}\r\n              </p>\r\n            </div>\r\n            <span className=\"px-3 py-1 rounded-full text-xs font-medium text-orange-600 bg-orange-100 capitalize\">\r\n              {order.status.replace('_', ' ')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Status Timeline */}\r\n        <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">Order Status</h3>\r\n          <div className=\"space-y-4\">\r\n            {statusSteps.map((step) => (\r\n              <div key={step.key} className=\"flex items-center\">\r\n                <div className={`w-8 h-8 rounded-full flex items-center justify-center mr-4 ${\r\n                  step.completed ? 'bg-green-500 text-white' : \r\n                  step.active ? 'bg-orange-500 text-white' : 'bg-gray-200 text-gray-400'\r\n                }`}>\r\n                  <i className={`${step.icon} text-sm`}></i>\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  <p className={`font-medium ${step.completed || step.active ? 'text-gray-900' : 'text-gray-400'}`}>\r\n                    {step.label}\r\n                  </p>\r\n                </div>\r\n                {step.completed && (\r\n                  <i className=\"ri-check-line text-green-500\"></i>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Order Items */}\r\n        <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">Order Items</h3>\r\n          {order.order_items?.map((item: any, index: number) => (\r\n            <div key={index} className=\"flex justify-between items-center py-2\">\r\n              <div>\r\n                <p className=\"font-medium\">{item.food_items?.name || 'Unknown Item'}</p>\r\n                <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                  <span>Qty: {item.quantity}</span>\r\n                  {item.size_name && (\r\n                    <>\r\n                      <span>â€¢</span>\r\n                      <span>Size: {item.size_name}</span>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <p className=\"font-semibold\">{formatPesoSimple(item.total_price)}</p>\r\n            </div>\r\n          ))}\r\n          <div className=\"border-t pt-2 mt-2\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <p className=\"text-lg font-bold\">Total</p>\r\n              <p className=\"text-lg font-bold text-orange-600\">{formatPesoSimple(order.total_amount)}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Customer Information */}\r\n        <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">Customer Information</h3>\r\n          <div className=\"space-y-2\">\r\n            <div>\r\n              <span className=\"text-gray-600\">Name: </span>\r\n              <span className=\"font-medium\">{order.customer_name}</span>\r\n            </div>\r\n            {order.customer_phone && (\r\n              <div>\r\n                <span className=\"text-gray-600\">Contact: </span>\r\n                <span className=\"font-medium\">{order.customer_phone}</span>\r\n              </div>\r\n            )}\r\n            {order.customer_email && (\r\n              <div>\r\n                <span className=\"text-gray-600\">Email: </span>\r\n                <span className=\"font-medium\">{order.customer_email}</span>\r\n              </div>\r\n            )}\r\n            {order.customer_address && (\r\n              <div>\r\n                <span className=\"text-gray-600\">Address: </span>\r\n                <span className=\"font-medium\">{order.customer_address}</span>\r\n              </div>\r\n            )}\r\n            <div>\r\n              <span className=\"text-gray-600\">Method: </span>\r\n              <span className=\"font-medium capitalize\">{order.order_type}</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"text-gray-600\">Payment: </span>\r\n              <span className=\"font-medium capitalize\">\r\n                {order.payment_method === 'cash' ? \r\n                  (order.order_type === 'delivery' ? 'Cash on Delivery' : 'Pay on Pickup') : \r\n                  order.payment_method}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Action Buttons */}\r\n        {order.status !== 'completed' && (\r\n          <div className=\"bg-orange-50 border border-orange-200 rounded-lg p-4 mb-6\">\r\n            <div className=\"flex items-center\">\r\n              <i className=\"ri-information-line text-orange-600 mr-3\"></i>\r\n              <div>\r\n                <p className=\"font-semibold text-orange-800\">Need Help?</p>\r\n                <p className=\"text-orange-700 text-sm\">Contact us if you have any questions about your order.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n"],"names":["OrderDetails","id","useParams","navigate","useNavigate","user","useAuth","getOrderById","useOrders","order","setOrder","useState","loading","setLoading","useEffect","orderData","error","subscription","supabase","updatedOrder","getStatusSteps","steps","currentIndex","step","index","jsxs","jsx","statusSteps","_a","item","Fragment","formatPesoSimple"],"mappings":"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"}