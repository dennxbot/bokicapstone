import{r as f}from"./index-rA_UgCij.js";import{u as h,s as c}from"./useAuth-CjWk1XML.js";const N=()=>{const[s,l]=f.useState([]),[S,p]=f.useState(!1),{user:i}=h();f.useEffect(()=>{i!=null&&i.id?(console.log("🔍 Loading cart for new user:",i.id),I()):(console.log("📱 Loading cart from localStorage (no user)"),m())},[i==null?void 0:i.id]);const m=()=>{try{const e=localStorage.getItem("cart");if(e){const t=JSON.parse(e);console.log("📱 Loaded from localStorage:",t),l(t)}else console.log("📱 No localStorage cart found"),l([])}catch(e){console.error("❌ Error loading from localStorage:",e),l([])}},I=async()=>{if(!(i!=null&&i.id)){console.log("❌ No user ID for database load");return}p(!0);try{console.log("🔍 Querying database for user:",i.id),console.log("📥 Loading cart from database for user:",i.id);const{data:e,error:t}=await c.from("cart_items").select(`
          quantity,
          size_option_id,
          size_name,
          size_multiplier,
          food_items (
            id,
            name,
            price,
            image_url,
            category_id,
            description,
            is_featured,
            is_available,
            preparation_time
          )
        `).eq("user_id",i.id);if(t){console.error("❌ Database query error:",t),m();return}if(console.log("📊 Raw database result:",e),!e||e.length===0){console.log("✅ Empty cart for user - checking localStorage for migration");const r=localStorage.getItem("cart");if(r){const o=JSON.parse(r);if(o.length>0){console.log("🔄 Migrating localStorage cart to database:",o),await b(o);return}}console.log("✅ Setting empty cart for user"),l([]);return}const a=e.filter(r=>r.food_items).map(r=>{const o=Array.isArray(r.food_items)?r.food_items[0]:r.food_items,d=o.price,_=r.size_multiplier||1,n=d*_;return console.log("🔄 Processing cart item:",{foodItemName:o.name,basePrice:d,sizeMultiplier:_,finalPrice:n,sizeName:r.size_name||"Regular",quantity:r.quantity}),{id:o.id,name:o.name,description:o.description||"",price:n,image:o.image_url||"",category:o.category_id||"",featured:o.is_featured||!1,available:o.is_available||!0,quantity:r.quantity,size_option_id:r.size_option_id||void 0,size_name:r.size_name||void 0,size_multiplier:r.size_multiplier||void 0}});console.log("✅ Processed cart items for user:",a),console.log("💰 Price verification:",a.map(r=>({name:r.name,price:r.price,note:"Using original price - size info not available"}))),l(a)}catch(e){console.error("❌ Error loading cart from database:",e),m()}finally{p(!1)}},b=async e=>{if(!(!(i!=null&&i.id)||e.length===0))try{console.log("🔄 Starting cart migration to database"),await c.from("cart_items").delete().eq("user_id",i.id);const t=e.map(r=>({user_id:i.id,food_item_id:r.id,quantity:r.quantity})),{error:a}=await c.from("cart_items").insert(t);if(a){console.error("❌ Migration error:",a);return}console.log("✅ Cart migrated successfully"),l(e),localStorage.removeItem("cart")}catch(t){console.error("❌ Migration failed:",t)}},g=async e=>{if(!(i!=null&&i.id)){console.log("📱 Saving to localStorage (no user)"),localStorage.setItem("cart",JSON.stringify(e));return}try{console.log("💾 SAVING CART TO DATABASE - Debug Info:"),console.log("🛒 Cart Items to Save:",e.map(a=>({name:a.name,price:a.price,quantity:a.quantity,size_option_id:a.size_option_id,size_name:a.size_name,size_multiplier:a.size_multiplier})));const{error:t}=await c.from("cart_items").delete().eq("user_id",i.id);if(t){console.error("❌ Error clearing existing cart:",t),localStorage.setItem("cart",JSON.stringify(e));return}if(e.length>0){const a=e.map(o=>({user_id:i.id,food_item_id:o.id,quantity:o.quantity,size_option_id:o.size_option_id||null,size_name:o.size_name||null,size_multiplier:o.size_multiplier||1}));console.log("📤 Database Insert Data (with size columns):",a);const{error:r}=await c.from("cart_items").insert(a);if(r){console.error("❌ Error inserting cart items:",r),localStorage.setItem("cart",JSON.stringify(e));return}}console.log("✅ Cart saved to database successfully (with size columns)")}catch(t){console.error("❌ Error saving to database:",t),localStorage.setItem("cart",JSON.stringify(e))}},C=async(e,t=1)=>{console.log("=".repeat(60)),console.log("🛒 CART HOOK DEBUG - Adding Item to Cart"),console.log("=".repeat(60)),console.log("📦 Received Item:",{name:e.name,id:e.id,price:e.price,quantity:t}),console.log("🔍 Full Item Data:",e),console.log("🏷️ Size Information:",{size_option_id:"size_option_id"in e?e.size_option_id:"NOT_PROVIDED",size_name:"size_name"in e?e.size_name:"NOT_PROVIDED",size_multiplier:"size_multiplier"in e?e.size_multiplier:"NOT_PROVIDED"});const a=s.findIndex(o=>"size_option_id"in e&&e.size_option_id?o.id===e.id&&o.size_option_id===e.size_option_id:o.id===e.id);console.log("🔎 Existing Item Check:",{existingItemIndex:a,foundExisting:a!==-1,currentCartItems:s.length});let r;if(a!==-1)r=s.map((o,d)=>d===a?{...o,quantity:o.quantity+t}:o),console.log("📈 UPDATED EXISTING ITEM - New quantity:",r[a].quantity);else{const o={id:e.id,name:e.name,description:e.description,price:e.price,image:"image"in e?e.image:e.image_url||"",category:"category"in e?e.category:e.category_id||"",featured:"featured"in e?e.featured:e.is_featured||!1,available:"available"in e?e.available:e.is_available||!0,quantity:t,size_option_id:"size_option_id"in e?e.size_option_id:void 0,size_name:"size_name"in e?e.size_name:void 0,size_multiplier:"size_multiplier"in e?e.size_multiplier:void 0};console.log("➕ CREATING NEW CART ITEM:"),console.log("📋 Final Cart Item Object:",o),console.log("💰 Final Price in Cart Item:",o.price),console.log("🏷️ Final Size Info:",{size_option_id:o.size_option_id,size_name:o.size_name,size_multiplier:o.size_multiplier}),r=[...s,o]}console.log("📊 NEW CART STATE:"),console.log("🛒 Total Items:",r.length),console.log("📝 All Cart Items:",r.map(o=>({name:o.name,price:o.price,quantity:o.quantity,size_name:o.size_name,size_option_id:o.size_option_id}))),console.log("=".repeat(60)),l(r),await g(r)},y=async(e,t)=>{console.log("🗑️ Removing from cart:",e,"size:",t);const a=s.filter(r=>t?!(r.id===e&&r.size_option_id===t):r.id!==e);if(l(a),console.log("✅ Cart after removal:",a),i!=null&&i.id)try{console.log("🗑️ Deleting from database:",e);const{error:r}=await c.from("cart_items").delete().eq("user_id",i.id).eq("food_item_id",e);r?(console.error("❌ Error deleting from database:",r),await g(a)):console.log("✅ Successfully deleted from database")}catch(r){console.error("❌ Database deletion error:",r),await g(a)}else localStorage.setItem("cart",JSON.stringify(a))},E=async(e,t,a)=>{if(console.log("🔄 Updating quantity for:",e,"to:",t,"size:",a),t<=0){await y(e,a);return}const r=s.map(o=>a?o.id===e&&o.size_option_id===a?{...o,quantity:t}:o:o.id===e?{...o,quantity:t}:o);console.log("✅ Cart after quantity update:",r),l(r),await g(r)},z=async()=>{if(console.log("🧹 Clearing cart"),l([]),i!=null&&i.id)try{const{error:e}=await c.from("cart_items").delete().eq("user_id",i.id);e?console.error("❌ Error clearing cart from database:",e):console.log("✅ Cart cleared from database")}catch(e){console.error("❌ Error clearing cart from database:",e)}else localStorage.removeItem("cart"),console.log("✅ Cart cleared from localStorage")},u=()=>s.reduce((e,t)=>e+t.price*t.quantity,0);return{items:s,isLoading:S,addToCart:C,removeFromCart:y,updateQuantity:E,clearCart:z,getTotalPrice:u,getTotalItems:()=>s.reduce((e,t)=>e+t.quantity,0),createOrder:async e=>{if(s.length===0)throw new Error("Cart is empty");try{console.log("🚀 Starting order creation process..."),console.log("📦 Cart items:",s.length),console.log("💰 Total price:",u()),console.log("👤 User ID:",e.userId),console.log("🔐 Setting user context for RLS...");const{error:t}=await c.rpc("set_user_context",{user_id:e.userId,user_role:(i==null?void 0:i.role)||"customer"});if(t)throw console.error("❌ RLS context error:",t),t;console.log("✅ User context set successfully"),console.log("📝 Creating order in database...");const{data:a,error:r}=await c.from("orders").insert({user_id:e.userId,customer_name:e.customerName,customer_email:e.customerEmail,customer_phone:e.customerPhone,customer_address:e.customerAddress,order_type:e.orderType,payment_method:e.paymentMethod,status:"pending",total_amount:u(),notes:null}).select().single();if(r)throw console.error("❌ Order creation error:",r),r;console.log("✅ Order created successfully:",a.id),console.log("📋 Creating order items...");const o=s.map(n=>({order_id:a.id,food_item_id:n.id,quantity:n.quantity,unit_price:n.price,total_price:n.price*n.quantity,size_option_id:n.size_option_id||null,size_name:n.size_name||null,size_multiplier:n.size_multiplier||null}));console.log("📋 Order items to insert:",o.length);const{error:d}=await c.from("order_items").insert(o);if(d)throw console.error("❌ Order items creation error:",d),d;console.log("✅ Order items created successfully"),console.log("🧹 Clearing cart..."),await z(),console.log("💾 Storing order in localStorage...");const _={id:a.id,items:s,total:u(),status:"pending",customerInfo:{fullName:e.customerName,contactNumber:e.customerPhone,email:e.customerEmail,address:e.customerAddress,orderType:e.orderType,paymentMethod:e.paymentMethod},createdAt:new Date().toISOString(),estimatedTime:e.orderType==="delivery"?"30-45 minutes":"15-20 minutes"};return localStorage.setItem("lastOrder",JSON.stringify(_)),console.log("✅ Order stored in localStorage"),console.log("🎉 Order creation completed successfully!"),a}catch(t){throw console.error("❌ Error creating order:",t),t}}}};export{N as u};
//# sourceMappingURL=useCart-4OqJo4WX.js.map
