{"version":3,"file":"page-Cq8M1tdc.js","sources":["../../src/pages/admin/menu/page.tsx"],"sourcesContent":["\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../../hooks/useAuth';\r\nimport { useSizes } from '../../../hooks/useSizes';\r\nimport { formatPesoSimple } from '../../../lib/currency';\r\nimport { supabase } from '../../../lib/supabase';\r\nimport AdminSidebar from '../../../components/feature/AdminSidebar';\r\nimport Button from '../../../components/base/Button';\r\nimport Input from '../../../components/base/Input';\r\n\r\ninterface MenuItem {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  category_id: string;\r\n  image_url?: string; // Make optional to handle undefined values\r\n  is_available: boolean;\r\n  is_featured: boolean;\r\n  category?: {\r\n    name: string;\r\n  };\r\n  sizes?: Array<{\r\n    id: string;\r\n    name: string;\r\n    price_multiplier: number;\r\n    is_available: boolean;\r\n  }>;\r\n}\r\n\r\ninterface Category {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nconst AdminMenu = () => {\r\n  const navigate = useNavigate();\r\n  const { isLoading, isAuthenticated, isAdmin } = useAuth();\r\n  const { sizeOptions, fetchAllSizeOptions, assignSizesToFoodItem, getFoodItemSizes } = useSizes();\r\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const [isAddingItem, setIsAddingItem] = useState(false);\r\n  const [editingItem, setEditingItem] = useState<MenuItem | null>(null);\r\n  const [filter, setFilter] = useState('all');\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedSizes, setSelectedSizes] = useState<string[]>([]);\r\n  const [newItem, setNewItem] = useState({\r\n    name: '',\r\n    description: '',\r\n    price: '',\r\n    category_id: '',\r\n    image_url: '',\r\n    is_available: true,\r\n    is_featured: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Wait for auth to load before checking\r\n    if (isLoading) return;\r\n\r\n    // If not authenticated or not admin, redirect to login\r\n    if (!isAuthenticated || !isAdmin) {\r\n      navigate('/admin/login');\r\n      return;\r\n    }\r\n\r\n    fetchMenuData();\r\n    fetchAllSizeOptions();\r\n  }, [isAuthenticated, isAdmin, isLoading, navigate]);\r\n\r\n  const fetchMenuData = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Fetch categories\r\n      const { data: categoriesData, error: categoriesError } = await supabase\r\n        .from('categories')\r\n        .select('*')\r\n        .eq('is_active', true)\r\n        .order('name');\r\n\r\n      if (categoriesError) throw categoriesError;\r\n\r\n      // Fetch menu items with categories and sizes\r\n      const { data: menuData, error: menuError } = await supabase\r\n        .from('food_items')\r\n        .select(`\r\n          *,\r\n          category:categories(name),\r\n          food_item_sizes(\r\n            size_option:size_options(\r\n              id,\r\n              name,\r\n              price_multiplier\r\n            ),\r\n            is_available\r\n          )\r\n        `)\r\n        .order('name');\r\n\r\n      if (menuError) throw menuError;\r\n\r\n      setCategories(categoriesData || []);\r\n      \r\n      // Process menu data to include sizes information\r\n      const processedMenuData = (menuData || []).map(item => {\r\n        const sizes = item.food_item_sizes?.map((fis: any) => ({\r\n          id: fis.size_option.id,\r\n          name: fis.size_option.name,\r\n          price_multiplier: fis.size_option.price_multiplier,\r\n          is_available: fis.is_available\r\n        })) || [];\r\n\r\n        return {\r\n          ...item,\r\n          is_featured: item.is_featured ?? false,\r\n          image_url: item.image_url || '',\r\n          sizes: sizes\r\n        };\r\n      });\r\n      \r\n      setMenuItems(processedMenuData);\r\n    } catch (error) {\r\n      console.error('Error fetching menu data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n    const value = e.target.type === 'checkbox' ? (e.target as HTMLInputElement).checked : e.target.value;\r\n    setNewItem({\r\n      ...newItem,\r\n      [e.target.name]: value\r\n    });\r\n  };\r\n\r\n  const handleAddItem = async () => {\r\n    if (!newItem.name || !newItem.price || !newItem.category_id) {\r\n      alert('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const imageUrl = newItem.image_url || `https://readdy.ai/api/search-image?query=delicious%20$%7BnewItem.name%7D%20food%20photography%20with%20simple%20clean%20background%2C%20professional%20food%20styling%2C%20appetizing%20presentation&width=400&height=300&seq=${Date.now()}&orientation=landscape`;\r\n\r\n      const { data, error } = await supabase\r\n        .from('food_items')\r\n        .insert([{\r\n          name: newItem.name,\r\n          description: newItem.description,\r\n          price: parseFloat(newItem.price),\r\n          category_id: newItem.category_id,\r\n          image_url: imageUrl,\r\n          is_available: newItem.is_available,\r\n          is_featured: newItem.is_featured || false\r\n        }])\r\n        .select(`\r\n          *,\r\n          category:categories(name)\r\n        `);\r\n\r\n      if (error) throw error;\r\n\r\n      if (data && data.length > 0) {\r\n        const newFoodItem = data[0];\r\n        \r\n        // Assign selected sizes to the new food item\r\n        if (selectedSizes.length > 0) {\r\n          await assignSizesToFoodItem(newFoodItem.id, selectedSizes);\r\n        }\r\n        \r\n        setMenuItems([...menuItems, ...data]);\r\n      }\r\n\r\n      setNewItem({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        category_id: '',\r\n        image_url: '',\r\n        is_available: true,\r\n        is_featured: false\r\n      });\r\n      setSelectedSizes([]);\r\n      setIsAddingItem(false);\r\n    } catch (error) {\r\n      console.error('Error adding menu item:', error);\r\n      alert('Error adding menu item. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditItem = async (item: MenuItem) => {\r\n    setEditingItem(item);\r\n    setNewItem({\r\n      name: item.name,\r\n      description: item.description || '',\r\n      price: item.price.toString(),\r\n      category_id: item.category_id,\r\n      image_url: item.image_url || '',\r\n      is_available: item.is_available,\r\n      is_featured: item.is_featured || false\r\n    });\r\n    \r\n    // Load existing sizes for this food item\r\n    try {\r\n      const existingSizes = await getFoodItemSizes(item.id);\r\n      const existingSizeIds = existingSizes.map(size => size.size_option_id);\r\n      setSelectedSizes(existingSizeIds);\r\n    } catch (error) {\r\n      console.error('Error loading existing sizes:', error);\r\n      setSelectedSizes([]);\r\n    }\r\n  };\r\n\r\n  const handleUpdateItem = async () => {\r\n    if (!editingItem || !newItem.name || !newItem.price || !newItem.category_id) {\r\n      alert('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('food_items')\r\n        .update({\r\n          name: newItem.name,\r\n          description: newItem.description,\r\n          price: parseFloat(newItem.price),\r\n          category_id: newItem.category_id,\r\n          image_url: newItem.image_url,\r\n          is_available: newItem.is_available,\r\n          is_featured: newItem.is_featured || false,\r\n          updated_at: new Date().toISOString()\r\n        })\r\n        .eq('id', editingItem.id)\r\n        .select(`\r\n          *,\r\n          category:categories(name)\r\n        `);\r\n\r\n      if (error) throw error;\r\n\r\n      if (data && data.length > 0) {\r\n        // Update sizes for the food item\r\n        await assignSizesToFoodItem(editingItem.id, selectedSizes);\r\n        \r\n        setMenuItems(menuItems.map(item => \r\n          item.id === editingItem.id ? data[0] : item\r\n        ));\r\n      }\r\n\r\n      setEditingItem(null);\r\n      setSelectedSizes([]);\r\n      setNewItem({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        category_id: '',\r\n        image_url: '',\r\n        is_available: true,\r\n        is_featured: false\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating menu item:', error);\r\n      alert('Error updating menu item. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteItem = async (id: string) => {\r\n    if (!confirm('Are you sure you want to delete this item?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { error } = await supabase\r\n        .from('food_items')\r\n        .delete()\r\n        .eq('id', id);\r\n\r\n      if (error) throw error;\r\n\r\n      setMenuItems(menuItems.filter(item => item.id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting menu item:', error);\r\n      alert('Error deleting menu item. Please try again.');\r\n    }\r\n  };\r\n\r\n  const toggleAvailability = async (id: string, currentAvailability: boolean) => {\r\n    try {\r\n      console.log('Toggling availability for item:', id, 'from', currentAvailability, 'to', !currentAvailability);\r\n      \r\n      const { data, error } = await supabase\r\n        .from('food_items')\r\n        .update({ \r\n          is_available: !currentAvailability,\r\n          updated_at: new Date().toISOString()\r\n        })\r\n        .eq('id', id)\r\n        .select();\r\n\r\n      if (error) {\r\n        console.error('Supabase error:', error);\r\n        throw error;\r\n      }\r\n\r\n      console.log('Update successful, returned data:', data);\r\n\r\n      setMenuItems(menuItems.map(item => \r\n        item.id === id ? { ...item, is_available: !currentAvailability } : item\r\n      ));\r\n      \r\n      console.log('Local state updated');\r\n    } catch (error) {\r\n      console.error('Error updating availability:', error);\r\n      alert('Error updating availability. Please try again.');\r\n    }\r\n  };\r\n\r\n  const toggleFeatured = async (id: string, currentFeatured: boolean) => {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('food_items')\r\n        .update({ \r\n          is_featured: !currentFeatured,\r\n          updated_at: new Date().toISOString()\r\n        })\r\n        .eq('id', id);\r\n\r\n      if (error) throw error;\r\n\r\n      setMenuItems(menuItems.map(item => \r\n        item.id === id ? { ...item, is_featured: !currentFeatured } : item\r\n      ));\r\n    } catch (error) {\r\n      console.error('Error updating featured status:', error);\r\n      alert('Error updating featured status. Please try again.');\r\n    }\r\n  };\r\n\r\n  const filteredItems = filter === 'all' ? menuItems : \r\n    filter === 'featured' ? menuItems.filter(item => item.is_featured) :\r\n    menuItems.filter(item => item.category_id === filter);\r\n\r\n  // Show loading while checking authentication\r\n  if (isLoading || loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-orange-500 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Don't render if not authenticated or not admin\r\n  if (!isAuthenticated || !isAdmin) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex\">\r\n      <AdminSidebar />\r\n      \r\n      <div className=\"flex-1 ml-64\">\r\n        <div className=\"bg-white shadow-sm border-b border-gray-200\">\r\n          <div className=\"px-6 py-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">Menu Management</h1>\r\n                <p className=\"text-gray-600\">Manage your restaurant menu items</p>\r\n              </div>\r\n              <Button\r\n                onClick={() => setIsAddingItem(true)}\r\n                className=\"bg-orange-600 hover:bg-orange-700 text-white px-4 py-2 whitespace-nowrap\"\r\n              >\r\n                <i className=\"ri-add-line mr-2\"></i>\r\n                Add Item\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          {/* Add/Edit Item Modal */}\r\n          {(isAddingItem || editingItem) && (\r\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n              <div className=\"bg-white rounded-lg p-6 w-full max-w-md max-h-[90vh] overflow-y-auto\">\r\n                <h2 className=\"text-xl font-bold mb-4\">\r\n                  {editingItem ? 'Edit Menu Item' : 'Add New Menu Item'}\r\n                </h2>\r\n                \r\n                <div className=\"space-y-4\">\r\n                  <Input\r\n                    label=\"Item Name\"\r\n                    name=\"name\"\r\n                    value={newItem.name}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Description\r\n                    </label>\r\n                    <textarea\r\n                      name=\"description\"\r\n                      value={newItem.description}\r\n                      onChange={handleInputChange}\r\n                      rows={3}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500\"\r\n                    />\r\n                  </div>\r\n\r\n                  <Input\r\n                    label=\"Price\"\r\n                    name=\"price\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={newItem.price}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Category\r\n                    </label>\r\n                    <select\r\n                      name=\"category_id\"\r\n                      value={newItem.category_id}\r\n                      onChange={handleInputChange}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500 pr-8\"\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select a category</option>\r\n                      {categories.map((category) => (\r\n                        <option key={category.id} value={category.id}>\r\n                          {category.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <Input\r\n                    label=\"Image URL (optional)\"\r\n                    name=\"image_url\"\r\n                    value={newItem.image_url}\r\n                    onChange={handleInputChange}\r\n                  />\r\n\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    <div className=\"flex items-center\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name=\"is_available\"\r\n                        checked={newItem.is_available}\r\n                        onChange={handleInputChange}\r\n                        className=\"mr-2\"\r\n                      />\r\n                      <label className=\"text-sm font-medium text-gray-700\">\r\n                        Available for order\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name=\"is_featured\"\r\n                        checked={newItem.is_featured || false}\r\n                        onChange={handleInputChange}\r\n                        className=\"mr-2\"\r\n                      />\r\n                      <label className=\"text-sm font-medium text-gray-700\">\r\n                        <i className=\"ri-star-line mr-1\"></i>\r\n                        Featured item\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Size Management Section */}\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Available Sizes (optional)\r\n                    </label>\r\n                    <div className=\"space-y-2 max-h-32 overflow-y-auto border border-gray-200 rounded-lg p-3\">\r\n                      {sizeOptions.map((size) => (\r\n                        <div key={size.id} className=\"flex items-center\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            id={`size-${size.id}`}\r\n                            checked={selectedSizes.includes(size.id)}\r\n                            onChange={(e) => {\r\n                              if (e.target.checked) {\r\n                                setSelectedSizes([...selectedSizes, size.id]);\r\n                              } else {\r\n                                setSelectedSizes(selectedSizes.filter(id => id !== size.id));\r\n                              }\r\n                            }}\r\n                            className=\"mr-2\"\r\n                          />\r\n                          <label htmlFor={`size-${size.id}`} className=\"text-sm text-gray-700 flex-1\">\r\n                            {size.name} {size.price_multiplier !== 1 && `(${size.price_multiplier}x price)`}\r\n                          </label>\r\n                        </div>\r\n                      ))}\r\n                      {sizeOptions.length === 0 && (\r\n                        <p className=\"text-sm text-gray-500 italic\">No size options available</p>\r\n                      )}\r\n                    </div>\r\n                    <p className=\"text-xs text-gray-500 mt-1\">\r\n                      Select which sizes are available for this menu item. If no sizes are selected, the item will use the default size.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex space-x-3 mt-6\">\r\n                  <Button\r\n                    onClick={editingItem ? handleUpdateItem : handleAddItem}\r\n                    className=\"flex-1 bg-orange-600 hover:bg-orange-700 text-white py-2 whitespace-nowrap\"\r\n                  >\r\n                    {editingItem ? 'Update Item' : 'Add Item'}\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => {\r\n                      setIsAddingItem(false);\r\n                      setEditingItem(null);\r\n                      setSelectedSizes([]);\r\n                      setNewItem({\r\n                        name: '',\r\n                        description: '',\r\n                        price: '',\r\n                        category_id: '',\r\n                        image_url: '',\r\n                        is_available: true,\r\n                        is_featured: false\r\n                      });\r\n                    }}\r\n                    variant=\"outline\"\r\n                    className=\"flex-1 border-gray-300 text-gray-700 py-2 whitespace-nowrap\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Filter Tabs */}\r\n          <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n            <div className=\"flex space-x-1\">\r\n              <button\r\n                onClick={() => setFilter('all')}\r\n                className={`px-4 py-2 rounded-lg font-medium transition-colors whitespace-nowrap ${\r\n                  filter === 'all'\r\n                    ? 'bg-orange-100 text-orange-700'\r\n                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'\r\n                }`}\r\n              >\r\n                All Items\r\n              </button>\r\n              <button\r\n                onClick={() => setFilter('featured')}\r\n                className={`px-4 py-2 rounded-lg font-medium transition-colors whitespace-nowrap ${\r\n                  filter === 'featured'\r\n                    ? 'bg-orange-100 text-orange-700'\r\n                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'\r\n                }`}\r\n              >\r\n                <i className=\"ri-star-line mr-1\"></i>\r\n                Featured\r\n              </button>\r\n              {categories.map((category) => (\r\n                <button\r\n                  key={category.id}\r\n                  onClick={() => setFilter(category.id)}\r\n                  className={`px-4 py-2 rounded-lg font-medium transition-colors whitespace-nowrap ${\r\n                    filter === category.id\r\n                      ? 'bg-orange-100 text-orange-700'\r\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'\r\n                  }`}\r\n                >\r\n                  {category.name}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Menu Items Grid */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {filteredItems.filter(item => item && item.id).map((item) => (\r\n              <div key={item.id} className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\r\n                <div className=\"relative\">\r\n                  <img\r\n                    src={item.image_url || `https://readdy.ai/api/search-image?query=delicious%20food%20photography%20with%20simple%20clean%20background&width=400&height=300&seq=${item.id}&orientation=landscape`}\r\n                    alt={item.name || 'Food item'}\r\n                    className=\"w-full h-48 object-cover object-top\"\r\n                  />\r\n                  <div className=\"absolute top-2 right-2 flex space-x-2\">\r\n                    <button\r\n                      onClick={() => toggleAvailability(item.id, item.is_available)}\r\n                      className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                        item.is_available\r\n                          ? 'bg-green-100 text-green-800'\r\n                          : 'bg-red-100 text-red-800'\r\n                      }`}\r\n                    >\r\n                      {item.is_available ? 'Available' : 'Unavailable'}\r\n                    </button>\r\n                    {item.is_featured && (\r\n                      <div className=\"bg-yellow-100 text-yellow-800 px-2 py-1 rounded-full text-xs font-medium flex items-center\">\r\n                        <i className=\"ri-star-fill mr-1\"></i>\r\n                        Featured\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"p-4\">\r\n                  <div className=\"flex justify-between items-start mb-2\">\r\n                    <h3 className=\"font-semibold text-lg\">{item.name}</h3>\r\n                    <span className=\"text-lg font-bold text-orange-600\">{formatPesoSimple(item.price)}</span>\r\n                  </div>\r\n                  \r\n                  <p className=\"text-gray-600 text-sm mb-3 line-clamp-2\">{item.description}</p>\r\n                  \r\n                  <div className=\"flex justify-between items-center mb-3\">\r\n                    <span className=\"text-xs text-gray-500 capitalize bg-gray-100 px-2 py-1 rounded\">\r\n                      {item.category?.name || 'No Category'}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {/* Available Sizes Display */}\r\n                  <div className=\"mb-3\">\r\n                    <div className=\"text-xs font-medium text-gray-700 mb-1\">Available Sizes:</div>\r\n                    {item.sizes && item.sizes.length > 0 ? (\r\n                      <div className=\"flex flex-wrap gap-1\">\r\n                        {item.sizes.map((size) => (\r\n                          <span\r\n                            key={size.id}\r\n                            className={`text-xs px-2 py-1 rounded-full ${\r\n                              size.is_available\r\n                                ? 'bg-green-100 text-green-700'\r\n                                : 'bg-gray-100 text-gray-500'\r\n                            }`}\r\n                          >\r\n                            {size.name}\r\n                            {size.price_multiplier !== 1 && (\r\n                              <span className=\"ml-1 text-xs opacity-75\">\r\n                                ({size.price_multiplier}x)\r\n                              </span>\r\n                            )}\r\n                          </span>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <span className=\"text-xs text-gray-400 italic\">No sizes configured</span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <button\r\n                      onClick={() => toggleFeatured(item.id, item.is_featured)}\r\n                      className={`flex items-center px-3 py-1 rounded-full text-xs font-medium transition-colors ${\r\n                        item.is_featured\r\n                          ? 'bg-yellow-100 text-yellow-800 hover:bg-yellow-200'\r\n                          : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\r\n                      }`}\r\n                    >\r\n                      <i className={`${item.is_featured ? 'ri-star-fill' : 'ri-star-line'} mr-1`}></i>\r\n                      {item.is_featured ? 'Featured' : 'Feature'}\r\n                    </button>\r\n                    \r\n                    <div className=\"flex space-x-2\">\r\n                      <button\r\n                        onClick={() => handleEditItem(item)}\r\n                        className=\"text-blue-600 hover:text-blue-700\"\r\n                      >\r\n                        <i className=\"ri-edit-line\"></i>\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDeleteItem(item.id)}\r\n                        className=\"text-red-600 hover:text-red-700\"\r\n                      >\r\n                        <i className=\"ri-delete-bin-line\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {filteredItems.length === 0 && (\r\n            <div className=\"bg-white rounded-lg shadow-sm p-8 text-center\">\r\n              <i className=\"ri-restaurant-line text-4xl text-gray-400 mb-4\"></i>\r\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">No menu items found</h3>\r\n              <p className=\"text-gray-600 mb-4\">No items match the selected category.</p>\r\n              <Button\r\n                onClick={() => setIsAddingItem(true)}\r\n                className=\"bg-orange-600 hover:bg-orange-700 text-white px-6 py-2 whitespace-nowrap\"\r\n              >\r\n                Add First Item\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminMenu;\r\n"],"names":["AdminMenu","navigate","useNavigate","isLoading","isAuthenticated","isAdmin","useAuth","sizeOptions","fetchAllSizeOptions","assignSizesToFoodItem","getFoodItemSizes","useSizes","menuItems","setMenuItems","useState","categories","setCategories","isAddingItem","setIsAddingItem","editingItem","setEditingItem","filter","setFilter","loading","setLoading","selectedSizes","setSelectedSizes","newItem","setNewItem","useEffect","fetchMenuData","categoriesData","categoriesError","supabase","menuData","menuError","processedMenuData","item","sizes","_a","fis","error","handleInputChange","e","value","handleAddItem","imageUrl","data","newFoodItem","handleEditItem","existingSizeIds","size","handleUpdateItem","handleDeleteItem","id","toggleAvailability","currentAvailability","toggleFeatured","currentFeatured","filteredItems","jsxs","jsx","AdminSidebar","Button","Input","category","formatPesoSimple"],"mappings":"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"}