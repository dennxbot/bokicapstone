{"version":3,"file":"currency-XAUvB6j1.js","sources":["../../src/lib/currency.ts"],"sourcesContent":["// Currency conversion and formatting utilities\n// 1 USD = 59 PHP (Philippine Peso)\n\nexport const EXCHANGE_RATE = {\n  USD_TO_PHP: 59\n};\n\n/**\n * Convert USD amount to Philippine Peso\n * @param usdAmount - Amount in USD\n * @returns Amount in PHP\n */\nexport const convertUSDToPHP = (usdAmount: number): number => {\n  return usdAmount * EXCHANGE_RATE.USD_TO_PHP;\n};\n\n/**\n * Convert PHP amount to USD\n * @param phpAmount - Amount in PHP\n * @returns Amount in USD\n */\nexport const convertPHPToUSD = (phpAmount: number): number => {\n  return phpAmount / EXCHANGE_RATE.USD_TO_PHP;\n};\n\n/**\n * Format amount as Philippine Peso currency\n * @param amount - Amount to format\n * @param showDecimals - Whether to show decimal places (default: true)\n * @returns Formatted currency string\n */\nexport const formatPHP = (amount: number, showDecimals: boolean = true): string => {\n  const formatter = new Intl.NumberFormat('en-PH', {\n    style: 'currency',\n    currency: 'PHP',\n    minimumFractionDigits: showDecimals ? 2 : 0,\n    maximumFractionDigits: showDecimals ? 2 : 0,\n  });\n  \n  return formatter.format(amount);\n};\n\n/**\n * Format amount as simple peso string with ₱ symbol\n * @param amount - Amount to format\n * @param showDecimals - Whether to show decimal places (default: true)\n * @returns Formatted currency string (e.g., \"₱59.00\")\n */\nexport const formatPesoSimple = (amount: number, showDecimals: boolean = true): string => {\n  const decimals = showDecimals ? 2 : 0;\n  return `₱${amount.toFixed(decimals)}`;\n};\n\n/**\n * Convert USD price to PHP and format it\n * @param usdPrice - Price in USD\n * @param showDecimals - Whether to show decimal places (default: true)\n * @returns Formatted PHP price string\n */\nexport const convertAndFormatPrice = (usdPrice: number, showDecimals: boolean = true): string => {\n  const phpPrice = convertUSDToPHP(usdPrice);\n  return formatPesoSimple(phpPrice, showDecimals);\n};\n\n/**\n * Get the currency symbol for PHP\n * @returns PHP currency symbol\n */\nexport const getCurrencySymbol = (): string => {\n  return '₱';\n};\n\n/**\n * Parse a price string and convert to number\n * @param priceString - Price string (e.g., \"₱59.00\", \"$1.00\")\n * @returns Numeric value\n */\nexport const parsePriceString = (priceString: string): number => {\n  // Remove currency symbols and parse\n  const numericValue = parseFloat(priceString.replace(/[₱$,]/g, ''));\n  return isNaN(numericValue) ? 0 : numericValue;\n};"],"names":["formatPesoSimple","amount","showDecimals","decimals"],"mappings":"AAgDO,MAAMA,EAAmB,CAACC,EAAgBC,EAAwB,KAAiB,CACxF,MAAMC,EAAWD,EAAe,EAAI,EACpC,MAAO,IAAID,EAAO,QAAQE,CAAQ,CAAC,EACrC"}