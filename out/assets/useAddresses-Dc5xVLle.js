import{r as a}from"./index-rA_UgCij.js";import{u as x,s as n}from"./useAuth-CjWk1XML.js";const U=()=>{const{user:s}=x(),[c,u]=a.useState([]),[g,f]=a.useState(!1),[E,d]=a.useState(null),i=a.useCallback(async()=>{if(s)try{await n.rpc("set_user_context",{user_id:s.id,user_role:s.role})}catch(e){console.error("Error setting user context:",e)}},[s]),o=a.useCallback(async()=>{if(!s){u([]);return}try{f(!0),d(null),await i();const{data:e,error:r}=await n.from("user_addresses").select("*").eq("user_id",s.id).order("created_at",{ascending:!1});if(r)throw r;u(e||[])}catch(e){console.error("Error loading addresses:",e);const r=e instanceof Error?e.message:"Failed to load addresses";d(r)}finally{f(!1)}},[s,i]),p=a.useCallback(async e=>{if(!s)throw new Error("User must be logged in to create address");try{d(null),await i();const{data:r,error:t}=await n.from("user_addresses").insert({user_id:s.id,label:e.label,address_line_1:e.address_line_1,address_line_2:e.address_line_2,city:e.city,state:e.state,postal_code:e.postal_code,country:e.country||"Philippines",is_default:e.is_default||!1}).select().single();if(t)throw t;return await o(),r}catch(r){console.error("Error creating address:",r);const t=r instanceof Error?r.message:"Failed to create address";throw d(t),new Error(t)}},[s,o,i]),h=a.useCallback(async e=>{if(!s)throw new Error("User must be logged in to update address");try{d(null),await i();const{data:r,error:t}=await n.from("user_addresses").update({label:e.label,address_line_1:e.address_line_1,address_line_2:e.address_line_2,city:e.city,state:e.state,postal_code:e.postal_code,country:e.country,is_default:e.is_default}).eq("id",e.id).eq("user_id",s.id).select().single();if(t)throw t;return await o(),r}catch(r){console.error("Error updating address:",r);const t=r instanceof Error?r.message:"Failed to update address";throw d(t),new Error(t)}},[s,o,i]),m=a.useCallback(async e=>{if(!s)throw new Error("User must be logged in to delete address");try{d(null),await i();const{error:r}=await n.from("user_addresses").delete().eq("id",e).eq("user_id",s.id);if(r)throw r;await o()}catch(r){console.error("Error deleting address:",r);const t=r instanceof Error?r.message:"Failed to delete address";throw d(t),new Error(t)}},[s,o,i]),y=a.useCallback(async e=>{if(!s)throw new Error("User must be logged in to set default address");try{d(null),await i();const{data:r}=await n.from("user_addresses").select("*").eq("user_id",s.id);if(!r)throw new Error("Could not fetch addresses");const t=r.find(l=>l.id===e);if(!t)throw new Error("Target address not found");if(t.is_default)return;const{error:C}=await n.rpc("set_default_address",{p_user_id:s.id,p_address_id:e});if(!C){await o();return}console.log("RPC function not available, using workaround approach");const q=r.filter(l=>l.id!==e);for(const l of q)if(l.is_default){const{error:w}=await n.from("user_addresses").update({is_default:!1}).eq("id",l.id).eq("user_id",s.id);w&&console.error("Error clearing default for address:",l.id,w),await new Promise(k=>setTimeout(k,50))}const{error:_}=await n.from("user_addresses").update({is_default:!0}).eq("id",e).eq("user_id",s.id);if(_)throw _;await o()}catch(r){console.error("Error setting default address:",r);const t=r instanceof Error?r.message:"Failed to set default address";throw d(t),new Error(t)}},[s,o,i]),b=a.useCallback(()=>c.find(e=>e.is_default)||null,[c]),A=a.useCallback(e=>[e.address_line_1,e.address_line_2,e.city,e.state,e.postal_code].filter(Boolean).join(", "),[]);return a.useEffect(()=>{o()},[o]),{addresses:c,isLoading:g,error:E,loadAddresses:o,createAddress:p,updateAddress:h,deleteAddress:m,setDefaultAddress:y,getDefaultAddress:b,formatAddress:A}};export{U as u};
//# sourceMappingURL=useAddresses-Dc5xVLle.js.map
