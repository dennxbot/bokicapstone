{"version":3,"file":"useFoodItems-CGujWiXl.js","sources":["../../src/hooks/useFoodItems.ts"],"sourcesContent":["\nimport { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\n\ninterface FoodItem {\n  id: string;\n  name: string;\n  description: string | null;\n  price: number;\n  image_url: string | null;\n  category_id: string | null;\n  is_available: boolean;\n  is_featured: boolean;\n  preparation_time: number;\n  created_at: string;\n  updated_at: string;\n  category?: {\n    name: string;\n  };\n}\n\ninterface Category {\n  id: string;\n  name: string;\n  description: string | null;\n  image_url: string | null;\n  is_active: boolean;\n  created_at: string;\n}\n\nexport const useFoodItems = () => {\n  const [foodItems, setFoodItems] = useState<FoodItem[]>([]);\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchData();\n\n    // Subscribe to real-time updates for food_items\n    const subscription = supabase\n      .channel('food_items_changes')\n      .on('postgres_changes', \n        { event: '*', schema: 'public', table: 'food_items' }, \n        (payload) => {\n          console.log('Real-time update received:', payload);\n          fetchData(); // Refetch data when changes occur\n        }\n      )\n      .subscribe();\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      setIsLoading(true);\n      console.log('🔄 Starting fetchData in useFoodItems...');\n\n      // Fetch categories\n      const { data: categoriesData, error: categoriesError } = await supabase\n        .from('categories')\n        .select('*')\n        .eq('is_active', true)\n        .order('name');\n\n      if (categoriesError) {\n        console.error('❌ Categories error:', categoriesError);\n        throw categoriesError;\n      }\n      console.log('✅ Categories fetched:', categoriesData?.length);\n      setCategories(categoriesData || []);\n\n      // Fetch ALL food items with category info (don't filter by availability here)\n      console.log('🔍 About to query food_items table...');\n      console.log('🔐 Current auth state:', supabase.auth.getUser());\n      \n      const { data: foodItemsData, error: foodItemsError } = await supabase\n        .from('food_items')\n        .select(`\n          *,\n          category:categories(name)\n        `)\n        .order('name');\n\n      console.log('📋 Raw query result:', { data: foodItemsData, error: foodItemsError });\n\n      if (foodItemsError) {\n        console.error('❌ Food items error:', foodItemsError);\n        throw foodItemsError;\n      }\n      \n      console.log('✅ Fetched food items:', foodItemsData?.length, 'items');\n      console.log('📊 Items with availability status:', foodItemsData?.map(item => ({\n        name: item.name,\n        is_available: item.is_available,\n        is_featured: item.is_featured\n      })));\n      \n      setFoodItems(foodItemsData || []);\n\n    } catch (error) {\n      console.error('💥 Error fetching data:', error);\n    } finally {\n      setIsLoading(false);\n      console.log('🏁 fetchData completed');\n    }\n  };\n\n  const getFoodItemsByCategory = (categoryId: string) => {\n    return foodItems.filter(item => item.category_id === categoryId);\n  };\n\n  const getFeaturedItems = () => {\n    return foodItems.filter(item => item.is_featured);\n  };\n\n  const searchFoodItems = (query: string) => {\n    if (!query.trim()) return foodItems;\n    \n    const searchTerm = query.toLowerCase().trim();\n    return foodItems.filter(item => {\n      const nameMatch = item.name.toLowerCase().includes(searchTerm);\n      const descriptionMatch = item.description && item.description.toLowerCase().includes(searchTerm);\n      const categoryMatch = item.category?.name && item.category.name.toLowerCase().includes(searchTerm);\n      \n      return nameMatch || descriptionMatch || categoryMatch;\n    });\n  };\n\n  const getFoodItemById = (id: string) => {\n    return foodItems.find(item => item.id === id);\n  };\n\n  return {\n    foodItems,\n    categories,\n    isLoading,\n    getFoodItemsByCategory,\n    getFeaturedItems,\n    searchFoodItems,\n    getFoodItemById,\n    refetch: fetchData,\n  };\n};\n"],"names":["useFoodItems","foodItems","setFoodItems","useState","categories","setCategories","isLoading","setIsLoading","useEffect","fetchData","subscription","supabase","payload","categoriesData","categoriesError","foodItemsData","foodItemsError","item","error","categoryId","query","searchTerm","nameMatch","descriptionMatch","categoryMatch","_a","id"],"mappings":"kFA8BO,MAAMA,EAAe,IAAM,CAChC,KAAM,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAqB,CAAA,CAAE,EACnD,CAACC,EAAYC,CAAa,EAAIF,EAAAA,SAAqB,CAAA,CAAE,EACrD,CAACG,EAAWC,CAAY,EAAIJ,EAAAA,SAAS,EAAI,EAE/CK,EAAAA,UAAU,IAAM,CACdC,EAAA,EAGA,MAAMC,EAAeC,EAClB,QAAQ,oBAAoB,EAC5B,GAAG,mBACF,CAAE,MAAO,IAAK,OAAQ,SAAU,MAAO,YAAA,EACtCC,GAAY,CACX,QAAQ,IAAI,6BAA8BA,CAAO,EACjDH,EAAA,CACF,CAAA,EAED,UAAA,EAEH,MAAO,IAAM,CACXC,EAAa,YAAA,CACf,CACF,EAAG,CAAA,CAAE,EAEL,MAAMD,EAAY,SAAY,CAC5B,GAAI,CACFF,EAAa,EAAI,EACjB,QAAQ,IAAI,0CAA0C,EAGtD,KAAM,CAAE,KAAMM,EAAgB,MAAOC,GAAoB,MAAMH,EAC5D,KAAK,YAAY,EACjB,OAAO,GAAG,EACV,GAAG,YAAa,EAAI,EACpB,MAAM,MAAM,EAEf,GAAIG,EACF,cAAQ,MAAM,sBAAuBA,CAAe,EAC9CA,EAER,QAAQ,IAAI,wBAAyBD,GAAA,YAAAA,EAAgB,MAAM,EAC3DR,EAAcQ,GAAkB,EAAE,EAGlC,QAAQ,IAAI,uCAAuC,EACnD,QAAQ,IAAI,yBAA0BF,EAAS,KAAK,SAAS,EAE7D,KAAM,CAAE,KAAMI,EAAe,MAAOC,CAAA,EAAmB,MAAML,EAC1D,KAAK,YAAY,EACjB,OAAO;AAAA;AAAA;AAAA,SAGP,EACA,MAAM,MAAM,EAIf,GAFA,QAAQ,IAAI,uBAAwB,CAAE,KAAMI,EAAe,MAAOC,EAAgB,EAE9EA,EACF,cAAQ,MAAM,sBAAuBA,CAAc,EAC7CA,EAGR,QAAQ,IAAI,wBAAyBD,GAAA,YAAAA,EAAe,OAAQ,OAAO,EACnE,QAAQ,IAAI,qCAAsCA,GAAA,YAAAA,EAAe,IAAIE,IAAS,CAC5E,KAAMA,EAAK,KACX,aAAcA,EAAK,aACnB,YAAaA,EAAK,WAAA,GACjB,EAEHf,EAAaa,GAAiB,EAAE,CAElC,OAASG,EAAO,CACd,QAAQ,MAAM,0BAA2BA,CAAK,CAChD,QAAA,CACEX,EAAa,EAAK,EAClB,QAAQ,IAAI,wBAAwB,CACtC,CACF,EA2BA,MAAO,CACL,UAAAN,EACA,WAAAG,EACA,UAAAE,EACA,uBA7B8Ba,GACvBlB,EAAU,OAAOgB,GAAQA,EAAK,cAAgBE,CAAU,EA6B/D,iBA1BuB,IAChBlB,EAAU,OAAOgB,GAAQA,EAAK,WAAW,EA0BhD,gBAvBuBG,GAAkB,CACzC,GAAI,CAACA,EAAM,KAAA,EAAQ,OAAOnB,EAE1B,MAAMoB,EAAaD,EAAM,YAAA,EAAc,KAAA,EACvC,OAAOnB,EAAU,OAAOgB,GAAQ,OAC9B,MAAMK,EAAYL,EAAK,KAAK,YAAA,EAAc,SAASI,CAAU,EACvDE,EAAmBN,EAAK,aAAeA,EAAK,YAAY,YAAA,EAAc,SAASI,CAAU,EACzFG,IAAgBC,EAAAR,EAAK,WAAL,YAAAQ,EAAe,OAAQR,EAAK,SAAS,KAAK,cAAc,SAASI,CAAU,EAEjG,OAAOC,GAAaC,GAAoBC,CAC1C,CAAC,CACH,EAaE,gBAXuBE,GAChBzB,EAAU,KAAKgB,GAAQA,EAAK,KAAOS,CAAE,EAW5C,QAASjB,CAAA,CAEb"}