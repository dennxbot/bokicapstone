{"version":3,"file":"page-DFcabGJw.js","sources":["../../src/pages/admin/reports/page.tsx"],"sourcesContent":["\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../../hooks/useAuth';\r\nimport { supabase } from '../../../lib/supabase';\r\nimport Button from '../../../components/base/Button';\r\nimport { formatPesoSimple } from '../../../lib/currency';\r\nimport AdminSidebar from '../../../components/feature/AdminSidebar';\r\n\r\ninterface ReportData {\r\n  totalOrders: number;\r\n  totalSales: number;\r\n  avgOrderValue: number;\r\n  topSellingItems: Array<{\r\n    name: string;\r\n    quantity: number;\r\n    revenue: number;\r\n  }>;\r\n  dailySales: Array<{\r\n    date: string;\r\n    orders: number;\r\n    sales: number;\r\n  }>;\r\n  ordersByStatus: {\r\n    pending: number;\r\n    preparing: number;\r\n    ready: number;\r\n    out_for_delivery: number;\r\n    completed: number;\r\n    cancelled: number;\r\n  };\r\n}\r\n\r\nconst AdminReports = () => {\r\n  const navigate = useNavigate();\r\n  const { isLoading, isAuthenticated, isAdmin } = useAuth();\r\n  const [dateRange, setDateRange] = useState('today');\r\n  const [reportData, setReportData] = useState<ReportData | null>(null);\r\n  const [isLoadingData, setIsLoadingData] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Wait for auth to load before checking\r\n    if (isLoading) return;\r\n\r\n    // If not authenticated or not admin, redirect to login\r\n    if (!isAuthenticated || !isAdmin) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    fetchReportData();\r\n  }, [isAuthenticated, isAdmin, isLoading, navigate, dateRange]);\r\n\r\n  const getDateRange = () => {\r\n    const now = new Date();\r\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n    \r\n    switch (dateRange) {\r\n      case 'today':\r\n        return {\r\n          start: today.toISOString(),\r\n          end: new Date(today.getTime() + 24 * 60 * 60 * 1000).toISOString()\r\n        };\r\n      case 'week':\r\n        const weekStart = new Date(today);\r\n        weekStart.setDate(today.getDate() - today.getDay());\r\n        return {\r\n          start: weekStart.toISOString(),\r\n          end: now.toISOString()\r\n        };\r\n      case 'month':\r\n        const monthStart = new Date(today.getFullYear(), today.getMonth(), 1);\r\n        return {\r\n          start: monthStart.toISOString(),\r\n          end: now.toISOString()\r\n        };\r\n      default:\r\n        return {\r\n          start: today.toISOString(),\r\n          end: new Date(today.getTime() + 24 * 60 * 60 * 1000).toISOString()\r\n        };\r\n    }\r\n  };\r\n\r\n  const fetchReportData = async () => {\r\n    try {\r\n      setIsLoadingData(true);\r\n      const { start, end } = getDateRange();\r\n\r\n      // Fetch orders within date range\r\n      const { data: orders, error: ordersError } = await supabase\r\n        .from('orders')\r\n        .select(`\r\n          *,\r\n          order_items (\r\n            *,\r\n            food_items (\r\n              name\r\n            )\r\n          )\r\n        `)\r\n        .gte('created_at', start)\r\n        .lt('created_at', end);\r\n\r\n      if (ordersError) throw ordersError;\r\n\r\n      // Calculate basic metrics - exclude cancelled orders from sales\r\n      const nonCancelledOrders = orders?.filter(order => order.status !== 'cancelled') || [];\r\n      const totalOrders = orders?.length || 0;\r\n      const totalSales = nonCancelledOrders.reduce((sum, order) => sum + order.total_amount, 0) || 0;\r\n      const avgOrderValue = nonCancelledOrders.length > 0 ? totalSales / nonCancelledOrders.length : 0;\r\n\r\n      // Calculate orders by status\r\n      const ordersByStatus = {\r\n        pending: orders?.filter(o => o.status === 'pending').length || 0,\r\n        preparing: orders?.filter(o => o.status === 'preparing').length || 0,\r\n        ready: orders?.filter(o => o.status === 'ready').length || 0,\r\n        out_for_delivery: orders?.filter(o => o.status === 'out_for_delivery').length || 0,\r\n        completed: orders?.filter(o => o.status === 'completed').length || 0,\r\n        cancelled: orders?.filter(o => o.status === 'cancelled').length || 0,\r\n      };\r\n\r\n      // Calculate top selling items - exclude cancelled orders\r\n      const itemSales: { [key: string]: { name: string; quantity: number; revenue: number } } = {};\r\n      \r\n      nonCancelledOrders.forEach(order => {\r\n        order.order_items?.forEach((item: any) => {\r\n          const itemName = item.food_items?.name || 'Unknown Item';\r\n          if (!itemSales[itemName]) {\r\n            itemSales[itemName] = { name: itemName, quantity: 0, revenue: 0 };\r\n          }\r\n          itemSales[itemName].quantity += item.quantity;\r\n          itemSales[itemName].revenue += item.total_price;\r\n        });\r\n      });\r\n\r\n      const topSellingItems = Object.values(itemSales)\r\n        .sort((a, b) => b.quantity - a.quantity)\r\n        .slice(0, 5);\r\n\r\n      // Calculate daily sales for the period - exclude cancelled orders\r\n      const dailySalesMap: { [key: string]: { orders: number; sales: number } } = {};\r\n      \r\n      nonCancelledOrders.forEach(order => {\r\n        const date = order.created_at.split('T')[0];\r\n        if (!dailySalesMap[date]) {\r\n          dailySalesMap[date] = { orders: 0, sales: 0 };\r\n        }\r\n        dailySalesMap[date].orders += 1;\r\n        dailySalesMap[date].sales += order.total_amount;\r\n      });\r\n\r\n      const dailySales = Object.entries(dailySalesMap)\r\n        .map(([date, data]) => ({ date, ...data }))\r\n        .sort((a, b) => a.date.localeCompare(b.date))\r\n        .slice(-7); // Last 7 days\r\n\r\n      setReportData({\r\n        totalOrders,\r\n        totalSales,\r\n        avgOrderValue,\r\n        topSellingItems,\r\n        dailySales,\r\n        ordersByStatus,\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching report data:', error);\r\n    } finally {\r\n      setIsLoadingData(false);\r\n    }\r\n  };\r\n\r\n  const exportReport = () => {\r\n    if (!reportData) return;\r\n\r\n    const csvContent = [\r\n      ['Metric', 'Value'],\r\n      ['Total Orders', reportData.totalOrders.toString()],\r\n      ['Total Sales', `$${reportData.totalSales.toFixed(2)}`],\r\n      ['Average Order Value', `$${reportData.avgOrderValue.toFixed(2)}`],\r\n      [''],\r\n      ['Orders by Status', ''],\r\n      ['Pending', reportData.ordersByStatus.pending.toString()],\r\n      ['Preparing', reportData.ordersByStatus.preparing.toString()],\r\n      ['Ready', reportData.ordersByStatus.ready.toString()],\r\n      ['Out for Delivery', reportData.ordersByStatus.out_for_delivery.toString()],\r\n      ['Completed', reportData.ordersByStatus.completed.toString()],\r\n      ['Cancelled', reportData.ordersByStatus.cancelled.toString()],\r\n      [''],\r\n      ['Top Selling Items', ''],\r\n      ['Item Name', 'Quantity', 'Revenue'],\r\n      ...reportData.topSellingItems.map(item => [\r\n        item.name,\r\n        item.quantity.toString(),\r\n        `$${item.revenue.toFixed(2)}`\r\n      ]),\r\n      [''],\r\n      ['Daily Sales', ''],\r\n      ['Date', 'Orders', 'Sales'],\r\n      ...reportData.dailySales.map(day => [\r\n        day.date,\r\n        day.orders.toString(),\r\n        `$${day.sales.toFixed(2)}`\r\n      ])\r\n    ].map(row => row.join(',')).join('\\\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `sales-report-${dateRange}-${new Date().toISOString().split('T')[0]}.csv`;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // Show loading while checking authentication\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-orange-500 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Don't render if not authenticated or not admin\r\n  if (!isAuthenticated || !isAdmin) {\r\n    return null;\r\n  }\r\n\r\n  if (isLoadingData || !reportData) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex\">\r\n        <AdminSidebar />\r\n        <div className=\"flex-1 ml-64 flex items-center justify-center\">\r\n          <div className=\"text-center\">\r\n            <i className=\"ri-loader-4-line text-4xl text-orange-600 animate-spin mb-4\"></i>\r\n            <p className=\"text-gray-600\">Loading reports...</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex\">\r\n      <AdminSidebar />\r\n      \r\n      <div className=\"flex-1 ml-64\">\r\n        <div className=\"bg-white shadow-sm border-b border-gray-200\">\r\n          <div className=\"px-6 py-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">Sales Reports</h1>\r\n                <p className=\"text-gray-600\">View detailed sales analytics from database</p>\r\n              </div>\r\n              <Button\r\n                onClick={exportReport}\r\n                className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 whitespace-nowrap\"\r\n              >\r\n                <i className=\"ri-download-line mr-2\"></i>\r\n                Export CSV\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          {/* Date Range Selector */}\r\n          <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h2 className=\"text-lg font-semibold\">Report Period</h2>\r\n              <div className=\"flex space-x-1\">\r\n                {[\r\n                  { key: 'today', label: 'Today' },\r\n                  { key: 'week', label: 'This Week' },\r\n                  { key: 'month', label: 'This Month' }\r\n                ].map((period) => (\r\n                  <button\r\n                    key={period.key}\r\n                    onClick={() => setDateRange(period.key)}\r\n                    className={`px-4 py-2 rounded-lg font-medium transition-colors whitespace-nowrap ${\r\n                      dateRange === period.key\r\n                        ? 'bg-orange-100 text-orange-700'\r\n                        : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'\r\n                    }`}\r\n                  >\r\n                    {period.label}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Key Metrics */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\r\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mr-4\">\r\n                  <i className=\"ri-shopping-bag-line text-xl text-blue-600\"></i>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600\">Total Orders</p>\r\n                  <p className=\"text-2xl font-bold text-gray-900\">{reportData.totalOrders}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mr-4\">\r\n                  <i className=\"ri-money-dollar-circle-line text-xl text-green-600\"></i>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600\">Total Sales</p>\r\n                  <p className=\"text-2xl font-bold text-gray-900\">{formatPesoSimple(reportData.totalSales)}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mr-4\">\r\n                  <i className=\"ri-bar-chart-line text-xl text-purple-600\"></i>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600\">Avg Order Value</p>\r\n                  <p className=\"text-2xl font-bold text-gray-900\">{formatPesoSimple(reportData.avgOrderValue)}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\r\n            {/* Top Selling Items */}\r\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\r\n              <h3 className=\"text-lg font-semibold mb-4\">Top Selling Items</h3>\r\n              {reportData.topSellingItems.length > 0 ? (\r\n                <div className=\"space-y-4\">\r\n                  {reportData.topSellingItems.map((item, index) => (\r\n                    <div key={index} className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-center\">\r\n                        <div className=\"w-8 h-8 bg-orange-100 rounded-full flex items-center justify-center mr-3\">\r\n                          <span className=\"text-sm font-bold text-orange-600\">{index + 1}</span>\r\n                        </div>\r\n                        <div>\r\n                          <h4 className=\"font-medium\">{item.name}</h4>\r\n                          <p className=\"text-sm text-gray-600\">{item.quantity} sold</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                         <p className=\"font-semibold text-green-600\">{formatPesoSimple(item.revenue)}</p>\r\n                       </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-8 text-gray-500\">\r\n                  <i className=\"ri-shopping-cart-line text-3xl mb-2\"></i>\r\n                  <p>No sales data for this period</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Order Status Breakdown */}\r\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\r\n              <h3 className=\"text-lg font-semibold mb-4\">Orders by Status</h3>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-4 h-4 bg-yellow-400 rounded-full mr-3\"></div>\r\n                    <span>Pending</span>\r\n                  </div>\r\n                  <span className=\"font-semibold\">{reportData.ordersByStatus.pending}</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-4 h-4 bg-blue-400 rounded-full mr-3\"></div>\r\n                    <span>Preparing</span>\r\n                  </div>\r\n                  <span className=\"font-semibold\">{reportData.ordersByStatus.preparing}</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-4 h-4 bg-purple-400 rounded-full mr-3\"></div>\r\n                    <span>Ready</span>\r\n                  </div>\r\n                  <span className=\"font-semibold\">{reportData.ordersByStatus.ready}</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-4 h-4 bg-orange-400 rounded-full mr-3\"></div>\r\n                    <span>Out for Delivery</span>\r\n                  </div>\r\n                  <span className=\"font-semibold\">{reportData.ordersByStatus.out_for_delivery}</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-4 h-4 bg-green-400 rounded-full mr-3\"></div>\r\n                    <span>Completed</span>\r\n                  </div>\r\n                  <span className=\"font-semibold\">{reportData.ordersByStatus.completed}</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-4 h-4 bg-red-400 rounded-full mr-3\"></div>\r\n                    <span>Cancelled</span>\r\n                  </div>\r\n                  <span className=\"font-semibold\">{reportData.ordersByStatus.cancelled}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Daily Sales Chart */}\r\n          <div className=\"bg-white rounded-lg shadow-sm p-6\">\r\n            <h3 className=\"text-lg font-semibold mb-4\">Daily Sales Trend</h3>\r\n            {reportData.dailySales.length > 0 ? (\r\n              <div className=\"overflow-x-auto\">\r\n                <div className=\"flex items-end space-x-2 h-64 min-w-full\">\r\n                  {reportData.dailySales.map((day, index) => {\r\n                    const maxSales = Math.max(...reportData.dailySales.map(d => d.sales));\r\n                    const height = maxSales > 0 ? (day.sales / maxSales) * 200 : 0;\r\n                    return (\r\n                      <div key={index} className=\"flex-1 flex flex-col items-center\">\r\n                        <div className=\"text-xs text-gray-600 mb-2\">{formatPesoSimple(day.sales)}</div>\r\n                        <div\r\n                          className=\"bg-orange-400 rounded-t w-full min-w-8\"\r\n                          style={{ height: `${Math.max(height, 4)}px` }}\r\n                        ></div>\r\n                        <div className=\"text-xs text-gray-600 mt-2 transform -rotate-45 origin-left\">\r\n                          {new Date(day.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                <i className=\"ri-bar-chart-line text-3xl mb-2\"></i>\r\n                <p>No sales data for this period</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminReports;\r\n"],"names":["AdminReports","navigate","useNavigate","isLoading","isAuthenticated","isAdmin","useAuth","dateRange","setDateRange","useState","reportData","setReportData","isLoadingData","setIsLoadingData","useEffect","fetchReportData","getDateRange","now","today","weekStart","start","end","orders","ordersError","supabase","nonCancelledOrders","order","totalOrders","totalSales","sum","avgOrderValue","ordersByStatus","o","itemSales","_a","item","itemName","topSellingItems","b","dailySalesMap","date","dailySales","data","error","exportReport","csvContent","day","row","blob","url","a","jsxs","jsx","AdminSidebar","Button","period","formatPesoSimple","index","maxSales","d","height"],"mappings":"0OAiCA,MAAMA,EAAe,IAAM,CACzB,MAAMC,EAAWC,EAAA,EACX,CAAE,UAAAC,EAAW,gBAAAC,EAAiB,QAAAC,CAAA,EAAYC,EAAA,EAC1C,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAS,OAAO,EAC5C,CAACC,EAAYC,CAAa,EAAIF,EAAAA,SAA4B,IAAI,EAC9D,CAACG,EAAeC,CAAgB,EAAIJ,EAAAA,SAAS,EAAK,EAExDK,EAAAA,UAAU,IAAM,CAEd,GAAI,CAAAX,EAGJ,IAAI,CAACC,GAAmB,CAACC,EAAS,CAChCJ,EAAS,QAAQ,EACjB,MACF,CAEAc,EAAA,EACF,EAAG,CAACX,EAAiBC,EAASF,EAAWF,EAAUM,CAAS,CAAC,EAE7D,MAAMS,EAAe,IAAM,CACzB,MAAMC,MAAU,KACVC,EAAQ,IAAI,KAAKD,EAAI,YAAA,EAAeA,EAAI,SAAA,EAAYA,EAAI,SAAS,EAEvE,OAAQV,EAAA,CACN,IAAK,QACH,MAAO,CACL,MAAOW,EAAM,YAAA,EACb,IAAK,IAAI,KAAKA,EAAM,QAAA,EAAY,KAAU,GAAK,GAAI,EAAE,YAAA,CAAY,EAErE,IAAK,OACH,MAAMC,EAAY,IAAI,KAAKD,CAAK,EAChC,OAAAC,EAAU,QAAQD,EAAM,QAAA,EAAYA,EAAM,QAAQ,EAC3C,CACL,MAAOC,EAAU,YAAA,EACjB,IAAKF,EAAI,YAAA,CAAY,EAEzB,IAAK,QAEH,MAAO,CACL,MAFiB,IAAI,KAAKC,EAAM,cAAeA,EAAM,SAAA,EAAY,CAAC,EAEhD,YAAA,EAClB,IAAKD,EAAI,YAAA,CAAY,EAEzB,QACE,MAAO,CACL,MAAOC,EAAM,YAAA,EACb,IAAK,IAAI,KAAKA,EAAM,QAAA,EAAY,KAAU,GAAK,GAAI,EAAE,YAAA,CAAY,CACnE,CAEN,EAEMH,EAAkB,SAAY,CAClC,GAAI,CACFF,EAAiB,EAAI,EACrB,KAAM,CAAE,MAAAO,EAAO,IAAAC,CAAA,EAAQL,EAAA,EAGjB,CAAE,KAAMM,EAAQ,MAAOC,CAAA,EAAgB,MAAMC,EAChD,KAAK,QAAQ,EACb,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQP,EACA,IAAI,aAAcJ,CAAK,EACvB,GAAG,aAAcC,CAAG,EAEvB,GAAIE,EAAa,MAAMA,EAGvB,MAAME,GAAqBH,GAAA,YAAAA,EAAQ,OAAOI,GAASA,EAAM,SAAW,eAAgB,CAAA,EAC9EC,GAAcL,GAAA,YAAAA,EAAQ,SAAU,EAChCM,EAAaH,EAAmB,OAAO,CAACI,EAAKH,IAAUG,EAAMH,EAAM,aAAc,CAAC,GAAK,EACvFI,EAAgBL,EAAmB,OAAS,EAAIG,EAAaH,EAAmB,OAAS,EAGzFM,EAAiB,CACrB,SAAST,GAAA,YAAAA,EAAQ,OAAOU,GAAKA,EAAE,SAAW,WAAW,SAAU,EAC/D,WAAWV,GAAA,YAAAA,EAAQ,OAAOU,GAAKA,EAAE,SAAW,aAAa,SAAU,EACnE,OAAOV,GAAA,YAAAA,EAAQ,OAAOU,GAAKA,EAAE,SAAW,SAAS,SAAU,EAC3D,kBAAkBV,GAAA,YAAAA,EAAQ,OAAOU,GAAKA,EAAE,SAAW,oBAAoB,SAAU,EACjF,WAAWV,GAAA,YAAAA,EAAQ,OAAOU,GAAKA,EAAE,SAAW,aAAa,SAAU,EACnE,WAAWV,GAAA,YAAAA,EAAQ,OAAOU,GAAKA,EAAE,SAAW,aAAa,SAAU,CAAA,EAI/DC,EAAoF,CAAA,EAE1FR,EAAmB,QAAQC,GAAS,QAClCQ,EAAAR,EAAM,cAAN,MAAAQ,EAAmB,QAASC,GAAc,OACxC,MAAMC,IAAWF,EAAAC,EAAK,aAAL,YAAAD,EAAiB,OAAQ,eACrCD,EAAUG,CAAQ,IACrBH,EAAUG,CAAQ,EAAI,CAAE,KAAMA,EAAU,SAAU,EAAG,QAAS,CAAA,GAEhEH,EAAUG,CAAQ,EAAE,UAAYD,EAAK,SACrCF,EAAUG,CAAQ,EAAE,SAAWD,EAAK,WACtC,EACF,CAAC,EAED,MAAME,EAAkB,OAAO,OAAOJ,CAAS,EAC5C,KAAK,CAAC,EAAGK,IAAMA,EAAE,SAAW,EAAE,QAAQ,EACtC,MAAM,EAAG,CAAC,EAGPC,EAAsE,CAAA,EAE5Ed,EAAmB,QAAQC,GAAS,CAClC,MAAMc,EAAOd,EAAM,WAAW,MAAM,GAAG,EAAE,CAAC,EACrCa,EAAcC,CAAI,IACrBD,EAAcC,CAAI,EAAI,CAAE,OAAQ,EAAG,MAAO,CAAA,GAE5CD,EAAcC,CAAI,EAAE,QAAU,EAC9BD,EAAcC,CAAI,EAAE,OAASd,EAAM,YACrC,CAAC,EAED,MAAMe,EAAa,OAAO,QAAQF,CAAa,EAC5C,IAAI,CAAC,CAACC,EAAME,CAAI,KAAO,CAAE,KAAAF,EAAM,GAAGE,CAAA,EAAO,EACzC,KAAK,CAAC,EAAGJ,IAAM,EAAE,KAAK,cAAcA,EAAE,IAAI,CAAC,EAC3C,MAAM,EAAE,EAEX3B,EAAc,CACZ,YAAAgB,EACA,WAAAC,EACA,cAAAE,EACA,gBAAAO,EACA,WAAAI,EACA,eAAAV,CAAA,CACD,CAEH,OAASY,EAAO,CACd,QAAQ,MAAM,8BAA+BA,CAAK,CACpD,QAAA,CACE9B,EAAiB,EAAK,CACxB,CACF,EAEM+B,EAAe,IAAM,CACzB,GAAI,CAAClC,EAAY,OAEjB,MAAMmC,EAAa,CACjB,CAAC,SAAU,OAAO,EAClB,CAAC,eAAgBnC,EAAW,YAAY,UAAU,EAClD,CAAC,cAAe,IAAIA,EAAW,WAAW,QAAQ,CAAC,CAAC,EAAE,EACtD,CAAC,sBAAuB,IAAIA,EAAW,cAAc,QAAQ,CAAC,CAAC,EAAE,EACjE,CAAC,EAAE,EACH,CAAC,mBAAoB,EAAE,EACvB,CAAC,UAAWA,EAAW,eAAe,QAAQ,UAAU,EACxD,CAAC,YAAaA,EAAW,eAAe,UAAU,UAAU,EAC5D,CAAC,QAASA,EAAW,eAAe,MAAM,UAAU,EACpD,CAAC,mBAAoBA,EAAW,eAAe,iBAAiB,UAAU,EAC1E,CAAC,YAAaA,EAAW,eAAe,UAAU,UAAU,EAC5D,CAAC,YAAaA,EAAW,eAAe,UAAU,UAAU,EAC5D,CAAC,EAAE,EACH,CAAC,oBAAqB,EAAE,EACxB,CAAC,YAAa,WAAY,SAAS,EACnC,GAAGA,EAAW,gBAAgB,IAAIyB,GAAQ,CACxCA,EAAK,KACLA,EAAK,SAAS,SAAA,EACd,IAAIA,EAAK,QAAQ,QAAQ,CAAC,CAAC,EAAA,CAC5B,EACD,CAAC,EAAE,EACH,CAAC,cAAe,EAAE,EAClB,CAAC,OAAQ,SAAU,OAAO,EAC1B,GAAGzB,EAAW,WAAW,IAAIoC,GAAO,CAClCA,EAAI,KACJA,EAAI,OAAO,SAAA,EACX,IAAIA,EAAI,MAAM,QAAQ,CAAC,CAAC,EAAA,CACzB,CAAA,EACD,IAAIC,GAAOA,EAAI,KAAK,GAAG,CAAC,EAAE,KAAK,KAAK,EAEhCC,EAAO,IAAI,KAAK,CAACH,CAAU,EAAG,CAAE,KAAM,WAAY,EAClDI,EAAM,OAAO,IAAI,gBAAgBD,CAAI,EACrCE,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,KAAOD,EACTC,EAAE,SAAW,gBAAgB3C,CAAS,IAAI,IAAI,KAAA,EAAO,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,CAAC,OAChF2C,EAAE,MAAA,EACF,OAAO,IAAI,gBAAgBD,CAAG,CAChC,EAGA,OAAI9C,QAEC,MAAA,CAAI,UAAU,2DACb,SAAAgD,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,+EAAA,CAAgF,EAC/FA,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,YAAA,CAAU,CAAA,CAAA,CACzC,CAAA,CACF,EAKA,CAAChD,GAAmB,CAACC,EAChB,KAGLO,GAAiB,CAACF,EAElByC,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAC,EAAAA,IAACC,EAAA,EAAa,QACb,MAAA,CAAI,UAAU,gDACb,SAAAF,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,6DAAA,CAA8D,EAC3EA,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,oBAAA,CAAkB,CAAA,CAAA,CACjD,CAAA,CACF,CAAA,EACF,EAKFD,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAC,EAAAA,IAACC,EAAA,EAAa,EAEdF,EAAAA,KAAC,MAAA,CAAI,UAAU,eACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,8CACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,YACb,SAAAD,OAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,mCAAmC,SAAA,gBAAa,EAC9DA,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,6CAAA,CAA2C,CAAA,EAC1E,EACAD,EAAAA,KAACG,EAAA,CACC,QAASV,EACT,UAAU,yEAEV,SAAA,CAAAQ,EAAAA,IAAC,IAAA,CAAE,UAAU,uBAAA,CAAwB,EAAI,YAAA,CAAA,CAAA,CAE3C,CAAA,CACF,EACF,EACF,EAEAD,EAAAA,KAAC,MAAA,CAAI,UAAU,MAEb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,yCACb,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,wBAAwB,SAAA,gBAAa,EACnDA,EAAAA,IAAC,MAAA,CAAI,UAAU,iBACZ,SAAA,CACC,CAAE,IAAK,QAAS,MAAO,OAAA,EACvB,CAAE,IAAK,OAAQ,MAAO,WAAA,EACtB,CAAE,IAAK,QAAS,MAAO,YAAA,CAAa,EACpC,IAAKG,GACLH,EAAAA,IAAC,SAAA,CAEC,QAAS,IAAM5C,EAAa+C,EAAO,GAAG,EACtC,UAAW,wEACThD,IAAcgD,EAAO,IACjB,gCACA,qDACN,GAEC,SAAAA,EAAO,KAAA,EARHA,EAAO,GAAA,CAUf,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CACF,EAGAJ,EAAAA,KAAC,MAAA,CAAI,UAAU,6CACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,oCACb,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,yEACb,eAAC,IAAA,CAAE,UAAU,6CAA6C,CAAA,CAC5D,SACC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,eAAY,EACjDA,EAAAA,IAAC,IAAA,CAAE,UAAU,mCAAoC,WAAW,WAAA,CAAY,CAAA,CAAA,CAC1E,CAAA,CAAA,CACF,CAAA,CACF,QAEC,MAAA,CAAI,UAAU,oCACb,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,0EACb,eAAC,IAAA,CAAE,UAAU,qDAAqD,CAAA,CACpE,SACC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,cAAW,QAC/C,IAAA,CAAE,UAAU,mCAAoC,SAAAI,EAAiB9C,EAAW,UAAU,CAAA,CAAE,CAAA,CAAA,CAC3F,CAAA,CAAA,CACF,CAAA,CACF,QAEC,MAAA,CAAI,UAAU,oCACb,SAAAyC,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,2EACb,eAAC,IAAA,CAAE,UAAU,4CAA4C,CAAA,CAC3D,SACC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,kBAAe,QACnD,IAAA,CAAE,UAAU,mCAAoC,SAAAI,EAAiB9C,EAAW,aAAa,CAAA,CAAE,CAAA,CAAA,CAC9F,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAEAyC,EAAAA,KAAC,MAAA,CAAI,UAAU,6CAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,6BAA6B,SAAA,oBAAiB,EAC3D1C,EAAW,gBAAgB,OAAS,EACnC0C,EAAAA,IAAC,OAAI,UAAU,YACZ,SAAA1C,EAAW,gBAAgB,IAAI,CAACyB,EAAMsB,IACrCN,EAAAA,KAAC,MAAA,CAAgB,UAAU,oCACzB,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,2EACb,SAAAA,EAAAA,IAAC,QAAK,UAAU,oCAAqC,SAAAK,EAAQ,CAAA,CAAE,CAAA,CACjE,SACC,MAAA,CACC,SAAA,CAAAL,EAAAA,IAAC,KAAA,CAAG,UAAU,cAAe,SAAAjB,EAAK,KAAK,EACvCgB,EAAAA,KAAC,IAAA,CAAE,UAAU,wBAAyB,SAAA,CAAAhB,EAAK,SAAS,OAAA,CAAA,CAAK,CAAA,CAAA,CAC3D,CAAA,EACF,EACAiB,EAAAA,IAAC,MAAA,CAAI,UAAU,aACZ,SAAAA,EAAAA,IAAC,IAAA,CAAE,UAAU,+BAAgC,SAAAI,EAAiBrB,EAAK,OAAO,CAAA,CAAE,CAAA,CAC9E,CAAA,GAZOsB,CAaV,CACD,CAAA,CACH,EAEAN,EAAAA,KAAC,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,qCAAA,CAAsC,EACnDA,EAAAA,IAAC,KAAE,SAAA,+BAAA,CAA6B,CAAA,CAAA,CAClC,CAAA,EAEJ,EAGAD,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,6BAA6B,SAAA,mBAAgB,EAC3DD,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,yCAAA,CAA0C,EACzDA,EAAAA,IAAC,QAAK,SAAA,SAAA,CAAO,CAAA,EACf,QACC,OAAA,CAAK,UAAU,gBAAiB,SAAA1C,EAAW,eAAe,OAAA,CAAQ,CAAA,EACrE,EACAyC,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,uCAAA,CAAwC,EACvDA,EAAAA,IAAC,QAAK,SAAA,WAAA,CAAS,CAAA,EACjB,QACC,OAAA,CAAK,UAAU,gBAAiB,SAAA1C,EAAW,eAAe,SAAA,CAAU,CAAA,EACvE,EACAyC,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,yCAAA,CAA0C,EACzDA,EAAAA,IAAC,QAAK,SAAA,OAAA,CAAK,CAAA,EACb,QACC,OAAA,CAAK,UAAU,gBAAiB,SAAA1C,EAAW,eAAe,KAAA,CAAM,CAAA,EACnE,EACAyC,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,yCAAA,CAA0C,EACzDA,EAAAA,IAAC,QAAK,SAAA,kBAAA,CAAgB,CAAA,EACxB,QACC,OAAA,CAAK,UAAU,gBAAiB,SAAA1C,EAAW,eAAe,gBAAA,CAAiB,CAAA,EAC9E,EACAyC,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,wCAAA,CAAyC,EACxDA,EAAAA,IAAC,QAAK,SAAA,WAAA,CAAS,CAAA,EACjB,QACC,OAAA,CAAK,UAAU,gBAAiB,SAAA1C,EAAW,eAAe,SAAA,CAAU,CAAA,EACvE,EACAyC,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,sCAAA,CAAuC,EACtDA,EAAAA,IAAC,QAAK,SAAA,WAAA,CAAS,CAAA,EACjB,QACC,OAAA,CAAK,UAAU,gBAAiB,SAAA1C,EAAW,eAAe,SAAA,CAAU,CAAA,CAAA,CACvE,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAGAyC,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,6BAA6B,SAAA,oBAAiB,EAC3D1C,EAAW,WAAW,OAAS,EAC9B0C,EAAAA,IAAC,OAAI,UAAU,kBACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,2CACZ,SAAA1C,EAAW,WAAW,IAAI,CAACoC,EAAKW,IAAU,CACzC,MAAMC,EAAW,KAAK,IAAI,GAAGhD,EAAW,WAAW,IAAIiD,GAAKA,EAAE,KAAK,CAAC,EAC9DC,EAASF,EAAW,EAAKZ,EAAI,MAAQY,EAAY,IAAM,EAC7D,OACEP,EAAAA,KAAC,MAAA,CAAgB,UAAU,oCACzB,SAAA,CAAAC,MAAC,OAAI,UAAU,6BAA8B,SAAAI,EAAiBV,EAAI,KAAK,EAAE,EACzEM,EAAAA,IAAC,MAAA,CACC,UAAU,yCACV,MAAO,CAAE,OAAQ,GAAG,KAAK,IAAIQ,EAAQ,CAAC,CAAC,IAAA,CAAK,CAAA,QAE7C,MAAA,CAAI,UAAU,8DACZ,SAAA,IAAI,KAAKd,EAAI,IAAI,EAAE,mBAAmB,QAAS,CAAE,MAAO,QAAS,IAAK,SAAA,CAAW,CAAA,CACpF,CAAA,CAAA,EARQW,CASV,CAEJ,CAAC,CAAA,CACH,CAAA,CACF,EAEAN,EAAAA,KAAC,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,iCAAA,CAAkC,EAC/CA,EAAAA,IAAC,KAAE,SAAA,+BAAA,CAA6B,CAAA,CAAA,CAClC,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,CAEJ"}